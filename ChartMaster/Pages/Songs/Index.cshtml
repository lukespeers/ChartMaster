@page
@model ChartMaster.Pages.Songs.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Song[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Song[0].Lyrics)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Song[0].ShortLyrics)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Song[0].FullTab)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Song)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @if (item != null && !String.IsNullOrEmpty(item.Lyrics))
                    {
                        <a asp-page="./LyricView" asp-route-id="@item.ID">Lyric View</a>
                    }
                </td>
                <td>
                    @if (item != null && !String.IsNullOrEmpty(item.ShortLyrics))
                    {
                        <a asp-page="./ShortView" asp-route-id="@item.ID">Short Lyrics</a>
                    }
                </td>
                <td>
                    @if (item != null && !String.IsNullOrEmpty(item.FullTab))
                    {
                        <a href="@Html.DisplayFor(modelItem => item.FullTab)">@item.FullTab.Substring(6,16)</a>
                    }
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.ID">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
